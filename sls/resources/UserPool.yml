Resources:
    Userpool:
        Type: AWS::Cognito::UserPool
        Properties:
            UserPoolName: ${self:custom.cognito.poolName}
            DeletionProtection: INACTIVE
            MfaConfiguration: OFF
            AutoVerifiedAttributes:
                - email
            AdminCreateUserConfig:
                AllowAdminCreateUserOnly: false
            UsernameAttributes:
                - email
            AccountRecoverySetting:
                RecoveryMechanisms:
                    - Name: verified_email
                      Priority: 1
            Schema:
                - Name: internalId
                  Required: false
                  Mutable: false
                  AttributeDataType: String
            Policies:
                PasswordPolicy:
                    MinimumLength: 8
                    RequireLowercase: false
                    RequireUppercase: false
                    RequireNumbers: false
                    RequireSymbols: false
            LambdaConfig:
                PreTokenGenerationConfig:
                    LambdaArn: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-preTokenGenerationTrigger"
                    LambdaVersion: V2_0
            EmailConfiguration:
                From: ${env:COGNITO_EMAILS_FROM}
                ReplyToEmailAddress:  ${env:COGNITO_EMAILS_REPLY_TO}
                EmailSendingAccount: DEVELOPER
                SourceArn: ${env:SES_ARN}
    UserpoolClient:
        Type: AWS::Cognito::UserPoolClient
        Properties:
            UserPoolId: !Ref Userpool
            ClientName: foodiary-api-dev-userpool-client
            ExplicitAuthFlows:
                - ALLOW_USER_PASSWORD_AUTH
            TokenValidityUnits:
                AccessToken: hours
            GenerateSecret: true
            AccessTokenValidity: 1
            RefreshTokenRotation:
                Feature: ENABLED
                RetryGracePeriodSeconds: 0

    PreTokenGenerationLambdaPermission:
        DependsOn: PreTokenGenerationTriggerLambdaFunction
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-preTokenGenerationTrigger"
            Action: lambda:InvokeFunction
            Principal: cognito-idp.amazonaws.com
            SourceArn: !GetAtt Userpool.Arn
